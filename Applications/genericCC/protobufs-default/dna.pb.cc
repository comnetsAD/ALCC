// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobufs-default/dna.proto

#include "protobufs-default/dna.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protobufs_2ddefault_2fdna_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobufs_2ddefault_2fdna_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Memory;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobufs_2ddefault_2fdna_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OptimizationSetting;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobufs_2ddefault_2fdna_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Range;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobufs_2ddefault_2fdna_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ConfigRange;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobufs_2ddefault_2fdna_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MemoryRange;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobufs_2ddefault_2fdna_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OptimizationSettings;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobufs_2ddefault_2fdna_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Whisker;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobufs_2ddefault_2fdna_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_WhiskerTree;
}  // namespace protobuf_protobufs_2ddefault_2fdna_2eproto
namespace RemyBuffers {
class WhiskerTreeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WhiskerTree>
      _instance;
} _WhiskerTree_default_instance_;
class MemoryRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemoryRange>
      _instance;
} _MemoryRange_default_instance_;
class MemoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Memory>
      _instance;
} _Memory_default_instance_;
class WhiskerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Whisker>
      _instance;
} _Whisker_default_instance_;
class OptimizationSettingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptimizationSetting>
      _instance;
} _OptimizationSetting_default_instance_;
class OptimizationSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptimizationSettings>
      _instance;
} _OptimizationSettings_default_instance_;
class RangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Range>
      _instance;
} _Range_default_instance_;
class ConfigRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigRange>
      _instance;
} _ConfigRange_default_instance_;
class NetConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetConfig>
      _instance;
} _NetConfig_default_instance_;
}  // namespace RemyBuffers
namespace protobuf_protobufs_2ddefault_2fdna_2eproto {
static void InitDefaultsWhiskerTree() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RemyBuffers::_WhiskerTree_default_instance_;
    new (ptr) ::RemyBuffers::WhiskerTree();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RemyBuffers::WhiskerTree::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_WhiskerTree =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsWhiskerTree}, {
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_MemoryRange.base,
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_Whisker.base,
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_ConfigRange.base,
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_OptimizationSettings.base,}};

static void InitDefaultsMemoryRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RemyBuffers::_MemoryRange_default_instance_;
    new (ptr) ::RemyBuffers::MemoryRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RemyBuffers::MemoryRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MemoryRange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMemoryRange}, {
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_Memory.base,}};

static void InitDefaultsMemory() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RemyBuffers::_Memory_default_instance_;
    new (ptr) ::RemyBuffers::Memory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RemyBuffers::Memory::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Memory =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMemory}, {}};

static void InitDefaultsWhisker() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RemyBuffers::_Whisker_default_instance_;
    new (ptr) ::RemyBuffers::Whisker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RemyBuffers::Whisker::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Whisker =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWhisker}, {
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_MemoryRange.base,}};

static void InitDefaultsOptimizationSetting() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RemyBuffers::_OptimizationSetting_default_instance_;
    new (ptr) ::RemyBuffers::OptimizationSetting();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RemyBuffers::OptimizationSetting::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OptimizationSetting =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOptimizationSetting}, {}};

static void InitDefaultsOptimizationSettings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RemyBuffers::_OptimizationSettings_default_instance_;
    new (ptr) ::RemyBuffers::OptimizationSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RemyBuffers::OptimizationSettings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OptimizationSettings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOptimizationSettings}, {
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_OptimizationSetting.base,}};

static void InitDefaultsRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RemyBuffers::_Range_default_instance_;
    new (ptr) ::RemyBuffers::Range();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RemyBuffers::Range::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Range =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRange}, {}};

static void InitDefaultsConfigRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RemyBuffers::_ConfigRange_default_instance_;
    new (ptr) ::RemyBuffers::ConfigRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RemyBuffers::ConfigRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigRange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigRange}, {
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_Range.base,}};

static void InitDefaultsNetConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RemyBuffers::_NetConfig_default_instance_;
    new (ptr) ::RemyBuffers::NetConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RemyBuffers::NetConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NetConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNetConfig}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_WhiskerTree.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MemoryRange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Memory.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Whisker.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OptimizationSetting.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OptimizationSettings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Range.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigRange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetConfig.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::WhiskerTree, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::WhiskerTree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::WhiskerTree, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::WhiskerTree, children_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::WhiskerTree, leaf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::WhiskerTree, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::WhiskerTree, optimizer_),
  0,
  ~0u,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::MemoryRange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::MemoryRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::MemoryRange, lower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::MemoryRange, upper_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Memory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Memory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Memory, rec_send_ewma_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Memory, rec_rec_ewma_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Memory, rtt_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Memory, slow_rec_rec_ewma_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Whisker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Whisker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Whisker, window_increment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Whisker, window_multiple_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Whisker, intersend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Whisker, domain_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSetting, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSetting, min_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSetting, max_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSetting, min_change_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSetting, max_change_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSetting, multiplier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSetting, default_value_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSettings, window_increment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSettings, window_multiple_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::OptimizationSettings, intersend_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Range, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Range, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::Range, high_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::ConfigRange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::ConfigRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::ConfigRange, link_packets_per_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::ConfigRange, rtt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::ConfigRange, num_senders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::ConfigRange, link_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::ConfigRange, mean_off_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::ConfigRange, mean_on_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::ConfigRange, drop_rate_),
  0,
  1,
  2,
  3,
  5,
  6,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::NetConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::NetConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::NetConfig, mean_on_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::NetConfig, mean_off_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::NetConfig, num_senders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::NetConfig, link_ppt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::NetConfig, delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::NetConfig, link_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RemyBuffers::NetConfig, drop_rate_),
  0,
  1,
  3,
  2,
  5,
  4,
  6,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::RemyBuffers::WhiskerTree)},
  { 15, 22, sizeof(::RemyBuffers::MemoryRange)},
  { 24, 33, sizeof(::RemyBuffers::Memory)},
  { 37, 46, sizeof(::RemyBuffers::Whisker)},
  { 50, 61, sizeof(::RemyBuffers::OptimizationSetting)},
  { 67, 75, sizeof(::RemyBuffers::OptimizationSettings)},
  { 78, 85, sizeof(::RemyBuffers::Range)},
  { 87, 99, sizeof(::RemyBuffers::ConfigRange)},
  { 106, 118, sizeof(::RemyBuffers::NetConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::RemyBuffers::_WhiskerTree_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RemyBuffers::_MemoryRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RemyBuffers::_Memory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RemyBuffers::_Whisker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RemyBuffers::_OptimizationSetting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RemyBuffers::_OptimizationSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RemyBuffers::_Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RemyBuffers::_ConfigRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RemyBuffers::_NetConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protobufs-default/dna.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033protobufs-default/dna.proto\022\013RemyBuffe"
      "rs\"\347\001\n\013WhiskerTree\022(\n\006domain\030\001 \001(\0132\030.Rem"
      "yBuffers.MemoryRange\022*\n\010children\030\002 \003(\0132\030"
      ".RemyBuffers.WhiskerTree\022\"\n\004leaf\030\003 \001(\0132\024"
      ".RemyBuffers.Whisker\022(\n\006config\030\004 \001(\0132\030.R"
      "emyBuffers.ConfigRange\0224\n\toptimizer\030\005 \001("
      "\0132!.RemyBuffers.OptimizationSettings\"U\n\013"
      "MemoryRange\022\"\n\005lower\030\013 \001(\0132\023.RemyBuffers"
      ".Memory\022\"\n\005upper\030\014 \001(\0132\023.RemyBuffers.Mem"
      "ory\"c\n\006Memory\022\025\n\rrec_send_ewma\030\025 \001(\001\022\024\n\014"
      "rec_rec_ewma\030\026 \001(\001\022\021\n\trtt_ratio\030\027 \001(\001\022\031\n"
      "\021slow_rec_rec_ewma\030\030 \001(\001\"y\n\007Whisker\022\030\n\020w"
      "indow_increment\030\037 \001(\021\022\027\n\017window_multiple"
      "\030  \001(\001\022\021\n\tintersend\030! \001(\001\022(\n\006domain\030\" \001("
      "\0132\030.RemyBuffers.MemoryRange\"\216\001\n\023Optimiza"
      "tionSetting\022\021\n\tmin_value\030) \001(\001\022\021\n\tmax_va"
      "lue\030* \001(\001\022\022\n\nmin_change\030+ \001(\001\022\022\n\nmax_cha"
      "nge\030, \001(\001\022\022\n\nmultiplier\030- \001(\001\022\025\n\rdefault"
      "_value\030. \001(\001\"\302\001\n\024OptimizationSettings\022:\n"
      "\020window_increment\0303 \001(\0132 .RemyBuffers.Op"
      "timizationSetting\0229\n\017window_multiple\0304 \001"
      "(\0132 .RemyBuffers.OptimizationSetting\0223\n\t"
      "intersend\0305 \001(\0132 .RemyBuffers.Optimizati"
      "onSetting\"\"\n\005Range\022\013\n\003low\030= \001(\001\022\014\n\004high\030"
      "> \001(\001\"\214\002\n\013ConfigRange\022/\n\023link_packets_pe"
      "r_ms\030G \001(\0132\022.RemyBuffers.Range\022\037\n\003rtt\030H "
      "\001(\0132\022.RemyBuffers.Range\022\'\n\013num_senders\030I"
      " \001(\0132\022.RemyBuffers.Range\022&\n\nlink_limit\030J"
      " \001(\0132\022.RemyBuffers.Range\022\031\n\021mean_off_dur"
      "ation\030Q \001(\001\022\030\n\020mean_on_duration\030R \001(\001\022%\n"
      "\tdrop_rate\030S \001(\0132\022.RemyBuffers.Range\"\235\001\n"
      "\tNetConfig\022\030\n\020mean_on_duration\030\001 \001(\001\022\031\n\021"
      "mean_off_duration\030\002 \001(\001\022\023\n\013num_senders\030\003"
      " \001(\r\022\020\n\010link_ppt\030\004 \001(\001\022\r\n\005delay\030\005 \001(\001\022\022\n"
      "\nlink_limit\030\006 \001(\r\022\021\n\tdrop_rate\030\007 \001(\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1396);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobufs-default/dna.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protobufs_2ddefault_2fdna_2eproto
namespace RemyBuffers {

// ===================================================================

void WhiskerTree::InitAsDefaultInstance() {
  ::RemyBuffers::_WhiskerTree_default_instance_._instance.get_mutable()->domain_ = const_cast< ::RemyBuffers::MemoryRange*>(
      ::RemyBuffers::MemoryRange::internal_default_instance());
  ::RemyBuffers::_WhiskerTree_default_instance_._instance.get_mutable()->leaf_ = const_cast< ::RemyBuffers::Whisker*>(
      ::RemyBuffers::Whisker::internal_default_instance());
  ::RemyBuffers::_WhiskerTree_default_instance_._instance.get_mutable()->config_ = const_cast< ::RemyBuffers::ConfigRange*>(
      ::RemyBuffers::ConfigRange::internal_default_instance());
  ::RemyBuffers::_WhiskerTree_default_instance_._instance.get_mutable()->optimizer_ = const_cast< ::RemyBuffers::OptimizationSettings*>(
      ::RemyBuffers::OptimizationSettings::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WhiskerTree::kDomainFieldNumber;
const int WhiskerTree::kChildrenFieldNumber;
const int WhiskerTree::kLeafFieldNumber;
const int WhiskerTree::kConfigFieldNumber;
const int WhiskerTree::kOptimizerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WhiskerTree::WhiskerTree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_WhiskerTree.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemyBuffers.WhiskerTree)
}
WhiskerTree::WhiskerTree(const WhiskerTree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      children_(from.children_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_domain()) {
    domain_ = new ::RemyBuffers::MemoryRange(*from.domain_);
  } else {
    domain_ = NULL;
  }
  if (from.has_leaf()) {
    leaf_ = new ::RemyBuffers::Whisker(*from.leaf_);
  } else {
    leaf_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::RemyBuffers::ConfigRange(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_optimizer()) {
    optimizer_ = new ::RemyBuffers::OptimizationSettings(*from.optimizer_);
  } else {
    optimizer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:RemyBuffers.WhiskerTree)
}

void WhiskerTree::SharedCtor() {
  ::memset(&domain_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optimizer_) -
      reinterpret_cast<char*>(&domain_)) + sizeof(optimizer_));
}

WhiskerTree::~WhiskerTree() {
  // @@protoc_insertion_point(destructor:RemyBuffers.WhiskerTree)
  SharedDtor();
}

void WhiskerTree::SharedDtor() {
  if (this != internal_default_instance()) delete domain_;
  if (this != internal_default_instance()) delete leaf_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete optimizer_;
}

void WhiskerTree::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WhiskerTree::descriptor() {
  ::protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WhiskerTree& WhiskerTree::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_WhiskerTree.base);
  return *internal_default_instance();
}


void WhiskerTree::Clear() {
// @@protoc_insertion_point(message_clear_start:RemyBuffers.WhiskerTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(domain_ != NULL);
      domain_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(leaf_ != NULL);
      leaf_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(config_ != NULL);
      config_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(optimizer_ != NULL);
      optimizer_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WhiskerTree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemyBuffers.WhiskerTree)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RemyBuffers.MemoryRange domain = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_domain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RemyBuffers.WhiskerTree children = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemyBuffers.Whisker leaf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_leaf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemyBuffers.ConfigRange config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemyBuffers.OptimizationSettings optimizer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optimizer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemyBuffers.WhiskerTree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemyBuffers.WhiskerTree)
  return false;
#undef DO_
}

void WhiskerTree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemyBuffers.WhiskerTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .RemyBuffers.MemoryRange domain = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_domain(), output);
  }

  // repeated .RemyBuffers.WhiskerTree children = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->children(static_cast<int>(i)),
      output);
  }

  // optional .RemyBuffers.Whisker leaf = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_leaf(), output);
  }

  // optional .RemyBuffers.ConfigRange config = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_config(), output);
  }

  // optional .RemyBuffers.OptimizationSettings optimizer = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_optimizer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemyBuffers.WhiskerTree)
}

::google::protobuf::uint8* WhiskerTree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemyBuffers.WhiskerTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .RemyBuffers.MemoryRange domain = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_domain(), deterministic, target);
  }

  // repeated .RemyBuffers.WhiskerTree children = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->children(static_cast<int>(i)), deterministic, target);
  }

  // optional .RemyBuffers.Whisker leaf = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_leaf(), deterministic, target);
  }

  // optional .RemyBuffers.ConfigRange config = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_config(), deterministic, target);
  }

  // optional .RemyBuffers.OptimizationSettings optimizer = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_optimizer(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemyBuffers.WhiskerTree)
  return target;
}

size_t WhiskerTree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemyBuffers.WhiskerTree)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .RemyBuffers.WhiskerTree children = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->children_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->children(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional .RemyBuffers.MemoryRange domain = 1;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *domain_);
    }

    // optional .RemyBuffers.Whisker leaf = 3;
    if (has_leaf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *leaf_);
    }

    // optional .RemyBuffers.ConfigRange config = 4;
    if (has_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *config_);
    }

    // optional .RemyBuffers.OptimizationSettings optimizer = 5;
    if (has_optimizer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *optimizer_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WhiskerTree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemyBuffers.WhiskerTree)
  GOOGLE_DCHECK_NE(&from, this);
  const WhiskerTree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WhiskerTree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemyBuffers.WhiskerTree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemyBuffers.WhiskerTree)
    MergeFrom(*source);
  }
}

void WhiskerTree::MergeFrom(const WhiskerTree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemyBuffers.WhiskerTree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_domain()->::RemyBuffers::MemoryRange::MergeFrom(from.domain());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_leaf()->::RemyBuffers::Whisker::MergeFrom(from.leaf());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_config()->::RemyBuffers::ConfigRange::MergeFrom(from.config());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_optimizer()->::RemyBuffers::OptimizationSettings::MergeFrom(from.optimizer());
    }
  }
}

void WhiskerTree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemyBuffers.WhiskerTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhiskerTree::CopyFrom(const WhiskerTree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemyBuffers.WhiskerTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhiskerTree::IsInitialized() const {
  return true;
}

void WhiskerTree::Swap(WhiskerTree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WhiskerTree::InternalSwap(WhiskerTree* other) {
  using std::swap;
  CastToBase(&children_)->InternalSwap(CastToBase(&other->children_));
  swap(domain_, other->domain_);
  swap(leaf_, other->leaf_);
  swap(config_, other->config_);
  swap(optimizer_, other->optimizer_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WhiskerTree::GetMetadata() const {
  protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemoryRange::InitAsDefaultInstance() {
  ::RemyBuffers::_MemoryRange_default_instance_._instance.get_mutable()->lower_ = const_cast< ::RemyBuffers::Memory*>(
      ::RemyBuffers::Memory::internal_default_instance());
  ::RemyBuffers::_MemoryRange_default_instance_._instance.get_mutable()->upper_ = const_cast< ::RemyBuffers::Memory*>(
      ::RemyBuffers::Memory::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryRange::kLowerFieldNumber;
const int MemoryRange::kUpperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryRange::MemoryRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_MemoryRange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemyBuffers.MemoryRange)
}
MemoryRange::MemoryRange(const MemoryRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lower()) {
    lower_ = new ::RemyBuffers::Memory(*from.lower_);
  } else {
    lower_ = NULL;
  }
  if (from.has_upper()) {
    upper_ = new ::RemyBuffers::Memory(*from.upper_);
  } else {
    upper_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:RemyBuffers.MemoryRange)
}

void MemoryRange::SharedCtor() {
  ::memset(&lower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upper_) -
      reinterpret_cast<char*>(&lower_)) + sizeof(upper_));
}

MemoryRange::~MemoryRange() {
  // @@protoc_insertion_point(destructor:RemyBuffers.MemoryRange)
  SharedDtor();
}

void MemoryRange::SharedDtor() {
  if (this != internal_default_instance()) delete lower_;
  if (this != internal_default_instance()) delete upper_;
}

void MemoryRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MemoryRange::descriptor() {
  ::protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemoryRange& MemoryRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_MemoryRange.base);
  return *internal_default_instance();
}


void MemoryRange::Clear() {
// @@protoc_insertion_point(message_clear_start:RemyBuffers.MemoryRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(lower_ != NULL);
      lower_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(upper_ != NULL);
      upper_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MemoryRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemyBuffers.MemoryRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RemyBuffers.Memory lower = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lower()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemyBuffers.Memory upper = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upper()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemyBuffers.MemoryRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemyBuffers.MemoryRange)
  return false;
#undef DO_
}

void MemoryRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemyBuffers.MemoryRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .RemyBuffers.Memory lower = 11;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_lower(), output);
  }

  // optional .RemyBuffers.Memory upper = 12;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_upper(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemyBuffers.MemoryRange)
}

::google::protobuf::uint8* MemoryRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemyBuffers.MemoryRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .RemyBuffers.Memory lower = 11;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_lower(), deterministic, target);
  }

  // optional .RemyBuffers.Memory upper = 12;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_upper(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemyBuffers.MemoryRange)
  return target;
}

size_t MemoryRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemyBuffers.MemoryRange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .RemyBuffers.Memory lower = 11;
    if (has_lower()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *lower_);
    }

    // optional .RemyBuffers.Memory upper = 12;
    if (has_upper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *upper_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemoryRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemyBuffers.MemoryRange)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemyBuffers.MemoryRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemyBuffers.MemoryRange)
    MergeFrom(*source);
  }
}

void MemoryRange::MergeFrom(const MemoryRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemyBuffers.MemoryRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_lower()->::RemyBuffers::Memory::MergeFrom(from.lower());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_upper()->::RemyBuffers::Memory::MergeFrom(from.upper());
    }
  }
}

void MemoryRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemyBuffers.MemoryRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryRange::CopyFrom(const MemoryRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemyBuffers.MemoryRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryRange::IsInitialized() const {
  return true;
}

void MemoryRange::Swap(MemoryRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryRange::InternalSwap(MemoryRange* other) {
  using std::swap;
  swap(lower_, other->lower_);
  swap(upper_, other->upper_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MemoryRange::GetMetadata() const {
  protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Memory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Memory::kRecSendEwmaFieldNumber;
const int Memory::kRecRecEwmaFieldNumber;
const int Memory::kRttRatioFieldNumber;
const int Memory::kSlowRecRecEwmaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Memory::Memory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_Memory.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemyBuffers.Memory)
}
Memory::Memory(const Memory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rec_send_ewma_, &from.rec_send_ewma_,
    static_cast<size_t>(reinterpret_cast<char*>(&slow_rec_rec_ewma_) -
    reinterpret_cast<char*>(&rec_send_ewma_)) + sizeof(slow_rec_rec_ewma_));
  // @@protoc_insertion_point(copy_constructor:RemyBuffers.Memory)
}

void Memory::SharedCtor() {
  ::memset(&rec_send_ewma_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slow_rec_rec_ewma_) -
      reinterpret_cast<char*>(&rec_send_ewma_)) + sizeof(slow_rec_rec_ewma_));
}

Memory::~Memory() {
  // @@protoc_insertion_point(destructor:RemyBuffers.Memory)
  SharedDtor();
}

void Memory::SharedDtor() {
}

void Memory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Memory::descriptor() {
  ::protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Memory& Memory::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_Memory.base);
  return *internal_default_instance();
}


void Memory::Clear() {
// @@protoc_insertion_point(message_clear_start:RemyBuffers.Memory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&rec_send_ewma_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&slow_rec_rec_ewma_) -
        reinterpret_cast<char*>(&rec_send_ewma_)) + sizeof(slow_rec_rec_ewma_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Memory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemyBuffers.Memory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double rec_send_ewma = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {
          set_has_rec_send_ewma();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rec_send_ewma_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double rec_rec_ewma = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 177 & 0xFF */)) {
          set_has_rec_rec_ewma();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rec_rec_ewma_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double rtt_ratio = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {
          set_has_rtt_ratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rtt_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double slow_rec_rec_ewma = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {
          set_has_slow_rec_rec_ewma();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &slow_rec_rec_ewma_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemyBuffers.Memory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemyBuffers.Memory)
  return false;
#undef DO_
}

void Memory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemyBuffers.Memory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double rec_send_ewma = 21;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->rec_send_ewma(), output);
  }

  // optional double rec_rec_ewma = 22;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->rec_rec_ewma(), output);
  }

  // optional double rtt_ratio = 23;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->rtt_ratio(), output);
  }

  // optional double slow_rec_rec_ewma = 24;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->slow_rec_rec_ewma(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemyBuffers.Memory)
}

::google::protobuf::uint8* Memory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemyBuffers.Memory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double rec_send_ewma = 21;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->rec_send_ewma(), target);
  }

  // optional double rec_rec_ewma = 22;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->rec_rec_ewma(), target);
  }

  // optional double rtt_ratio = 23;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->rtt_ratio(), target);
  }

  // optional double slow_rec_rec_ewma = 24;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->slow_rec_rec_ewma(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemyBuffers.Memory)
  return target;
}

size_t Memory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemyBuffers.Memory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional double rec_send_ewma = 21;
    if (has_rec_send_ewma()) {
      total_size += 2 + 8;
    }

    // optional double rec_rec_ewma = 22;
    if (has_rec_rec_ewma()) {
      total_size += 2 + 8;
    }

    // optional double rtt_ratio = 23;
    if (has_rtt_ratio()) {
      total_size += 2 + 8;
    }

    // optional double slow_rec_rec_ewma = 24;
    if (has_slow_rec_rec_ewma()) {
      total_size += 2 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Memory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemyBuffers.Memory)
  GOOGLE_DCHECK_NE(&from, this);
  const Memory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Memory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemyBuffers.Memory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemyBuffers.Memory)
    MergeFrom(*source);
  }
}

void Memory::MergeFrom(const Memory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemyBuffers.Memory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      rec_send_ewma_ = from.rec_send_ewma_;
    }
    if (cached_has_bits & 0x00000002u) {
      rec_rec_ewma_ = from.rec_rec_ewma_;
    }
    if (cached_has_bits & 0x00000004u) {
      rtt_ratio_ = from.rtt_ratio_;
    }
    if (cached_has_bits & 0x00000008u) {
      slow_rec_rec_ewma_ = from.slow_rec_rec_ewma_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Memory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemyBuffers.Memory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Memory::CopyFrom(const Memory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemyBuffers.Memory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Memory::IsInitialized() const {
  return true;
}

void Memory::Swap(Memory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Memory::InternalSwap(Memory* other) {
  using std::swap;
  swap(rec_send_ewma_, other->rec_send_ewma_);
  swap(rec_rec_ewma_, other->rec_rec_ewma_);
  swap(rtt_ratio_, other->rtt_ratio_);
  swap(slow_rec_rec_ewma_, other->slow_rec_rec_ewma_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Memory::GetMetadata() const {
  protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Whisker::InitAsDefaultInstance() {
  ::RemyBuffers::_Whisker_default_instance_._instance.get_mutable()->domain_ = const_cast< ::RemyBuffers::MemoryRange*>(
      ::RemyBuffers::MemoryRange::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Whisker::kWindowIncrementFieldNumber;
const int Whisker::kWindowMultipleFieldNumber;
const int Whisker::kIntersendFieldNumber;
const int Whisker::kDomainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Whisker::Whisker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_Whisker.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemyBuffers.Whisker)
}
Whisker::Whisker(const Whisker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_domain()) {
    domain_ = new ::RemyBuffers::MemoryRange(*from.domain_);
  } else {
    domain_ = NULL;
  }
  ::memcpy(&window_increment_, &from.window_increment_,
    static_cast<size_t>(reinterpret_cast<char*>(&intersend_) -
    reinterpret_cast<char*>(&window_increment_)) + sizeof(intersend_));
  // @@protoc_insertion_point(copy_constructor:RemyBuffers.Whisker)
}

void Whisker::SharedCtor() {
  ::memset(&domain_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intersend_) -
      reinterpret_cast<char*>(&domain_)) + sizeof(intersend_));
}

Whisker::~Whisker() {
  // @@protoc_insertion_point(destructor:RemyBuffers.Whisker)
  SharedDtor();
}

void Whisker::SharedDtor() {
  if (this != internal_default_instance()) delete domain_;
}

void Whisker::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Whisker::descriptor() {
  ::protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Whisker& Whisker::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_Whisker.base);
  return *internal_default_instance();
}


void Whisker::Clear() {
// @@protoc_insertion_point(message_clear_start:RemyBuffers.Whisker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(domain_ != NULL);
    domain_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&window_increment_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&intersend_) -
        reinterpret_cast<char*>(&window_increment_)) + sizeof(intersend_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Whisker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemyBuffers.Whisker)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint32 window_increment = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_window_increment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &window_increment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double window_multiple = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1u /* 257 & 0xFF */)) {
          set_has_window_multiple();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &window_multiple_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double intersend = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 265 & 0xFF */)) {
          set_has_intersend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &intersend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemyBuffers.MemoryRange domain = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_domain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemyBuffers.Whisker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemyBuffers.Whisker)
  return false;
#undef DO_
}

void Whisker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemyBuffers.Whisker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 window_increment = 31;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(31, this->window_increment(), output);
  }

  // optional double window_multiple = 32;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(32, this->window_multiple(), output);
  }

  // optional double intersend = 33;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(33, this->intersend(), output);
  }

  // optional .RemyBuffers.MemoryRange domain = 34;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->_internal_domain(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemyBuffers.Whisker)
}

::google::protobuf::uint8* Whisker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemyBuffers.Whisker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional sint32 window_increment = 31;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(31, this->window_increment(), target);
  }

  // optional double window_multiple = 32;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(32, this->window_multiple(), target);
  }

  // optional double intersend = 33;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(33, this->intersend(), target);
  }

  // optional .RemyBuffers.MemoryRange domain = 34;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34, this->_internal_domain(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemyBuffers.Whisker)
  return target;
}

size_t Whisker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemyBuffers.Whisker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .RemyBuffers.MemoryRange domain = 34;
    if (has_domain()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *domain_);
    }

    // optional sint32 window_increment = 31;
    if (has_window_increment()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->window_increment());
    }

    // optional double window_multiple = 32;
    if (has_window_multiple()) {
      total_size += 2 + 8;
    }

    // optional double intersend = 33;
    if (has_intersend()) {
      total_size += 2 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Whisker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemyBuffers.Whisker)
  GOOGLE_DCHECK_NE(&from, this);
  const Whisker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Whisker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemyBuffers.Whisker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemyBuffers.Whisker)
    MergeFrom(*source);
  }
}

void Whisker::MergeFrom(const Whisker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemyBuffers.Whisker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_domain()->::RemyBuffers::MemoryRange::MergeFrom(from.domain());
    }
    if (cached_has_bits & 0x00000002u) {
      window_increment_ = from.window_increment_;
    }
    if (cached_has_bits & 0x00000004u) {
      window_multiple_ = from.window_multiple_;
    }
    if (cached_has_bits & 0x00000008u) {
      intersend_ = from.intersend_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Whisker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemyBuffers.Whisker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Whisker::CopyFrom(const Whisker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemyBuffers.Whisker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Whisker::IsInitialized() const {
  return true;
}

void Whisker::Swap(Whisker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Whisker::InternalSwap(Whisker* other) {
  using std::swap;
  swap(domain_, other->domain_);
  swap(window_increment_, other->window_increment_);
  swap(window_multiple_, other->window_multiple_);
  swap(intersend_, other->intersend_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Whisker::GetMetadata() const {
  protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptimizationSetting::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptimizationSetting::kMinValueFieldNumber;
const int OptimizationSetting::kMaxValueFieldNumber;
const int OptimizationSetting::kMinChangeFieldNumber;
const int OptimizationSetting::kMaxChangeFieldNumber;
const int OptimizationSetting::kMultiplierFieldNumber;
const int OptimizationSetting::kDefaultValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptimizationSetting::OptimizationSetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_OptimizationSetting.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemyBuffers.OptimizationSetting)
}
OptimizationSetting::OptimizationSetting(const OptimizationSetting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&min_value_, &from.min_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&default_value_) -
    reinterpret_cast<char*>(&min_value_)) + sizeof(default_value_));
  // @@protoc_insertion_point(copy_constructor:RemyBuffers.OptimizationSetting)
}

void OptimizationSetting::SharedCtor() {
  ::memset(&min_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&default_value_) -
      reinterpret_cast<char*>(&min_value_)) + sizeof(default_value_));
}

OptimizationSetting::~OptimizationSetting() {
  // @@protoc_insertion_point(destructor:RemyBuffers.OptimizationSetting)
  SharedDtor();
}

void OptimizationSetting::SharedDtor() {
}

void OptimizationSetting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OptimizationSetting::descriptor() {
  ::protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptimizationSetting& OptimizationSetting::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_OptimizationSetting.base);
  return *internal_default_instance();
}


void OptimizationSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:RemyBuffers.OptimizationSetting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&min_value_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&default_value_) -
        reinterpret_cast<char*>(&min_value_)) + sizeof(default_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OptimizationSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemyBuffers.OptimizationSetting)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double min_value = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 329 & 0xFF */)) {
          set_has_min_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double max_value = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 337 & 0xFF */)) {
          set_has_max_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double min_change = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 345 & 0xFF */)) {
          set_has_min_change();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double max_change = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 353 & 0xFF */)) {
          set_has_max_change();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double multiplier = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 361 & 0xFF */)) {
          set_has_multiplier();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &multiplier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double default_value = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 369 & 0xFF */)) {
          set_has_default_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &default_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemyBuffers.OptimizationSetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemyBuffers.OptimizationSetting)
  return false;
#undef DO_
}

void OptimizationSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemyBuffers.OptimizationSetting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double min_value = 41;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(41, this->min_value(), output);
  }

  // optional double max_value = 42;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(42, this->max_value(), output);
  }

  // optional double min_change = 43;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(43, this->min_change(), output);
  }

  // optional double max_change = 44;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(44, this->max_change(), output);
  }

  // optional double multiplier = 45;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(45, this->multiplier(), output);
  }

  // optional double default_value = 46;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(46, this->default_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemyBuffers.OptimizationSetting)
}

::google::protobuf::uint8* OptimizationSetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemyBuffers.OptimizationSetting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double min_value = 41;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(41, this->min_value(), target);
  }

  // optional double max_value = 42;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(42, this->max_value(), target);
  }

  // optional double min_change = 43;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(43, this->min_change(), target);
  }

  // optional double max_change = 44;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(44, this->max_change(), target);
  }

  // optional double multiplier = 45;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(45, this->multiplier(), target);
  }

  // optional double default_value = 46;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(46, this->default_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemyBuffers.OptimizationSetting)
  return target;
}

size_t OptimizationSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemyBuffers.OptimizationSetting)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional double min_value = 41;
    if (has_min_value()) {
      total_size += 2 + 8;
    }

    // optional double max_value = 42;
    if (has_max_value()) {
      total_size += 2 + 8;
    }

    // optional double min_change = 43;
    if (has_min_change()) {
      total_size += 2 + 8;
    }

    // optional double max_change = 44;
    if (has_max_change()) {
      total_size += 2 + 8;
    }

    // optional double multiplier = 45;
    if (has_multiplier()) {
      total_size += 2 + 8;
    }

    // optional double default_value = 46;
    if (has_default_value()) {
      total_size += 2 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptimizationSetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemyBuffers.OptimizationSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const OptimizationSetting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptimizationSetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemyBuffers.OptimizationSetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemyBuffers.OptimizationSetting)
    MergeFrom(*source);
  }
}

void OptimizationSetting::MergeFrom(const OptimizationSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemyBuffers.OptimizationSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      min_value_ = from.min_value_;
    }
    if (cached_has_bits & 0x00000002u) {
      max_value_ = from.max_value_;
    }
    if (cached_has_bits & 0x00000004u) {
      min_change_ = from.min_change_;
    }
    if (cached_has_bits & 0x00000008u) {
      max_change_ = from.max_change_;
    }
    if (cached_has_bits & 0x00000010u) {
      multiplier_ = from.multiplier_;
    }
    if (cached_has_bits & 0x00000020u) {
      default_value_ = from.default_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OptimizationSetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemyBuffers.OptimizationSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizationSetting::CopyFrom(const OptimizationSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemyBuffers.OptimizationSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizationSetting::IsInitialized() const {
  return true;
}

void OptimizationSetting::Swap(OptimizationSetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptimizationSetting::InternalSwap(OptimizationSetting* other) {
  using std::swap;
  swap(min_value_, other->min_value_);
  swap(max_value_, other->max_value_);
  swap(min_change_, other->min_change_);
  swap(max_change_, other->max_change_);
  swap(multiplier_, other->multiplier_);
  swap(default_value_, other->default_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OptimizationSetting::GetMetadata() const {
  protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptimizationSettings::InitAsDefaultInstance() {
  ::RemyBuffers::_OptimizationSettings_default_instance_._instance.get_mutable()->window_increment_ = const_cast< ::RemyBuffers::OptimizationSetting*>(
      ::RemyBuffers::OptimizationSetting::internal_default_instance());
  ::RemyBuffers::_OptimizationSettings_default_instance_._instance.get_mutable()->window_multiple_ = const_cast< ::RemyBuffers::OptimizationSetting*>(
      ::RemyBuffers::OptimizationSetting::internal_default_instance());
  ::RemyBuffers::_OptimizationSettings_default_instance_._instance.get_mutable()->intersend_ = const_cast< ::RemyBuffers::OptimizationSetting*>(
      ::RemyBuffers::OptimizationSetting::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptimizationSettings::kWindowIncrementFieldNumber;
const int OptimizationSettings::kWindowMultipleFieldNumber;
const int OptimizationSettings::kIntersendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptimizationSettings::OptimizationSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_OptimizationSettings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemyBuffers.OptimizationSettings)
}
OptimizationSettings::OptimizationSettings(const OptimizationSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_window_increment()) {
    window_increment_ = new ::RemyBuffers::OptimizationSetting(*from.window_increment_);
  } else {
    window_increment_ = NULL;
  }
  if (from.has_window_multiple()) {
    window_multiple_ = new ::RemyBuffers::OptimizationSetting(*from.window_multiple_);
  } else {
    window_multiple_ = NULL;
  }
  if (from.has_intersend()) {
    intersend_ = new ::RemyBuffers::OptimizationSetting(*from.intersend_);
  } else {
    intersend_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:RemyBuffers.OptimizationSettings)
}

void OptimizationSettings::SharedCtor() {
  ::memset(&window_increment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intersend_) -
      reinterpret_cast<char*>(&window_increment_)) + sizeof(intersend_));
}

OptimizationSettings::~OptimizationSettings() {
  // @@protoc_insertion_point(destructor:RemyBuffers.OptimizationSettings)
  SharedDtor();
}

void OptimizationSettings::SharedDtor() {
  if (this != internal_default_instance()) delete window_increment_;
  if (this != internal_default_instance()) delete window_multiple_;
  if (this != internal_default_instance()) delete intersend_;
}

void OptimizationSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OptimizationSettings::descriptor() {
  ::protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptimizationSettings& OptimizationSettings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_OptimizationSettings.base);
  return *internal_default_instance();
}


void OptimizationSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:RemyBuffers.OptimizationSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(window_increment_ != NULL);
      window_increment_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(window_multiple_ != NULL);
      window_multiple_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(intersend_ != NULL);
      intersend_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OptimizationSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemyBuffers.OptimizationSettings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RemyBuffers.OptimizationSetting window_increment = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_window_increment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemyBuffers.OptimizationSetting window_multiple = 52;
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_window_multiple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemyBuffers.OptimizationSetting intersend = 53;
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intersend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemyBuffers.OptimizationSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemyBuffers.OptimizationSettings)
  return false;
#undef DO_
}

void OptimizationSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemyBuffers.OptimizationSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .RemyBuffers.OptimizationSetting window_increment = 51;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->_internal_window_increment(), output);
  }

  // optional .RemyBuffers.OptimizationSetting window_multiple = 52;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->_internal_window_multiple(), output);
  }

  // optional .RemyBuffers.OptimizationSetting intersend = 53;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, this->_internal_intersend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemyBuffers.OptimizationSettings)
}

::google::protobuf::uint8* OptimizationSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemyBuffers.OptimizationSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .RemyBuffers.OptimizationSetting window_increment = 51;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51, this->_internal_window_increment(), deterministic, target);
  }

  // optional .RemyBuffers.OptimizationSetting window_multiple = 52;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        52, this->_internal_window_multiple(), deterministic, target);
  }

  // optional .RemyBuffers.OptimizationSetting intersend = 53;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53, this->_internal_intersend(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemyBuffers.OptimizationSettings)
  return target;
}

size_t OptimizationSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemyBuffers.OptimizationSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .RemyBuffers.OptimizationSetting window_increment = 51;
    if (has_window_increment()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *window_increment_);
    }

    // optional .RemyBuffers.OptimizationSetting window_multiple = 52;
    if (has_window_multiple()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *window_multiple_);
    }

    // optional .RemyBuffers.OptimizationSetting intersend = 53;
    if (has_intersend()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *intersend_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OptimizationSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemyBuffers.OptimizationSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const OptimizationSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptimizationSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemyBuffers.OptimizationSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemyBuffers.OptimizationSettings)
    MergeFrom(*source);
  }
}

void OptimizationSettings::MergeFrom(const OptimizationSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemyBuffers.OptimizationSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_window_increment()->::RemyBuffers::OptimizationSetting::MergeFrom(from.window_increment());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_window_multiple()->::RemyBuffers::OptimizationSetting::MergeFrom(from.window_multiple());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_intersend()->::RemyBuffers::OptimizationSetting::MergeFrom(from.intersend());
    }
  }
}

void OptimizationSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemyBuffers.OptimizationSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptimizationSettings::CopyFrom(const OptimizationSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemyBuffers.OptimizationSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptimizationSettings::IsInitialized() const {
  return true;
}

void OptimizationSettings::Swap(OptimizationSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptimizationSettings::InternalSwap(OptimizationSettings* other) {
  using std::swap;
  swap(window_increment_, other->window_increment_);
  swap(window_multiple_, other->window_multiple_);
  swap(intersend_, other->intersend_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OptimizationSettings::GetMetadata() const {
  protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Range::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Range::kLowFieldNumber;
const int Range::kHighFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Range::Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_Range.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemyBuffers.Range)
}
Range::Range(const Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&low_, &from.low_,
    static_cast<size_t>(reinterpret_cast<char*>(&high_) -
    reinterpret_cast<char*>(&low_)) + sizeof(high_));
  // @@protoc_insertion_point(copy_constructor:RemyBuffers.Range)
}

void Range::SharedCtor() {
  ::memset(&low_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&high_) -
      reinterpret_cast<char*>(&low_)) + sizeof(high_));
}

Range::~Range() {
  // @@protoc_insertion_point(destructor:RemyBuffers.Range)
  SharedDtor();
}

void Range::SharedDtor() {
}

void Range::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Range::descriptor() {
  ::protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Range& Range::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_Range.base);
  return *internal_default_instance();
}


void Range::Clear() {
// @@protoc_insertion_point(message_clear_start:RemyBuffers.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&low_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&high_) -
        reinterpret_cast<char*>(&low_)) + sizeof(high_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemyBuffers.Range)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double low = 61;
      case 61: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(233u /* 489 & 0xFF */)) {
          set_has_low();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double high = 62;
      case 62: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(241u /* 497 & 0xFF */)) {
          set_has_high();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemyBuffers.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemyBuffers.Range)
  return false;
#undef DO_
}

void Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemyBuffers.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double low = 61;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(61, this->low(), output);
  }

  // optional double high = 62;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(62, this->high(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemyBuffers.Range)
}

::google::protobuf::uint8* Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemyBuffers.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double low = 61;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(61, this->low(), target);
  }

  // optional double high = 62;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(62, this->high(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemyBuffers.Range)
  return target;
}

size_t Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemyBuffers.Range)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional double low = 61;
    if (has_low()) {
      total_size += 2 + 8;
    }

    // optional double high = 62;
    if (has_high()) {
      total_size += 2 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemyBuffers.Range)
  GOOGLE_DCHECK_NE(&from, this);
  const Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemyBuffers.Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemyBuffers.Range)
    MergeFrom(*source);
  }
}

void Range::MergeFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemyBuffers.Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      low_ = from.low_;
    }
    if (cached_has_bits & 0x00000002u) {
      high_ = from.high_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemyBuffers.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Range::CopyFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemyBuffers.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Range::IsInitialized() const {
  return true;
}

void Range::Swap(Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Range::InternalSwap(Range* other) {
  using std::swap;
  swap(low_, other->low_);
  swap(high_, other->high_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Range::GetMetadata() const {
  protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigRange::InitAsDefaultInstance() {
  ::RemyBuffers::_ConfigRange_default_instance_._instance.get_mutable()->link_packets_per_ms_ = const_cast< ::RemyBuffers::Range*>(
      ::RemyBuffers::Range::internal_default_instance());
  ::RemyBuffers::_ConfigRange_default_instance_._instance.get_mutable()->rtt_ = const_cast< ::RemyBuffers::Range*>(
      ::RemyBuffers::Range::internal_default_instance());
  ::RemyBuffers::_ConfigRange_default_instance_._instance.get_mutable()->num_senders_ = const_cast< ::RemyBuffers::Range*>(
      ::RemyBuffers::Range::internal_default_instance());
  ::RemyBuffers::_ConfigRange_default_instance_._instance.get_mutable()->link_limit_ = const_cast< ::RemyBuffers::Range*>(
      ::RemyBuffers::Range::internal_default_instance());
  ::RemyBuffers::_ConfigRange_default_instance_._instance.get_mutable()->drop_rate_ = const_cast< ::RemyBuffers::Range*>(
      ::RemyBuffers::Range::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigRange::kLinkPacketsPerMsFieldNumber;
const int ConfigRange::kRttFieldNumber;
const int ConfigRange::kNumSendersFieldNumber;
const int ConfigRange::kLinkLimitFieldNumber;
const int ConfigRange::kMeanOffDurationFieldNumber;
const int ConfigRange::kMeanOnDurationFieldNumber;
const int ConfigRange::kDropRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigRange::ConfigRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_ConfigRange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemyBuffers.ConfigRange)
}
ConfigRange::ConfigRange(const ConfigRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_link_packets_per_ms()) {
    link_packets_per_ms_ = new ::RemyBuffers::Range(*from.link_packets_per_ms_);
  } else {
    link_packets_per_ms_ = NULL;
  }
  if (from.has_rtt()) {
    rtt_ = new ::RemyBuffers::Range(*from.rtt_);
  } else {
    rtt_ = NULL;
  }
  if (from.has_num_senders()) {
    num_senders_ = new ::RemyBuffers::Range(*from.num_senders_);
  } else {
    num_senders_ = NULL;
  }
  if (from.has_link_limit()) {
    link_limit_ = new ::RemyBuffers::Range(*from.link_limit_);
  } else {
    link_limit_ = NULL;
  }
  if (from.has_drop_rate()) {
    drop_rate_ = new ::RemyBuffers::Range(*from.drop_rate_);
  } else {
    drop_rate_ = NULL;
  }
  ::memcpy(&mean_off_duration_, &from.mean_off_duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&mean_on_duration_) -
    reinterpret_cast<char*>(&mean_off_duration_)) + sizeof(mean_on_duration_));
  // @@protoc_insertion_point(copy_constructor:RemyBuffers.ConfigRange)
}

void ConfigRange::SharedCtor() {
  ::memset(&link_packets_per_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mean_on_duration_) -
      reinterpret_cast<char*>(&link_packets_per_ms_)) + sizeof(mean_on_duration_));
}

ConfigRange::~ConfigRange() {
  // @@protoc_insertion_point(destructor:RemyBuffers.ConfigRange)
  SharedDtor();
}

void ConfigRange::SharedDtor() {
  if (this != internal_default_instance()) delete link_packets_per_ms_;
  if (this != internal_default_instance()) delete rtt_;
  if (this != internal_default_instance()) delete num_senders_;
  if (this != internal_default_instance()) delete link_limit_;
  if (this != internal_default_instance()) delete drop_rate_;
}

void ConfigRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigRange::descriptor() {
  ::protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigRange& ConfigRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_ConfigRange.base);
  return *internal_default_instance();
}


void ConfigRange::Clear() {
// @@protoc_insertion_point(message_clear_start:RemyBuffers.ConfigRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(link_packets_per_ms_ != NULL);
      link_packets_per_ms_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(rtt_ != NULL);
      rtt_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(num_senders_ != NULL);
      num_senders_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(link_limit_ != NULL);
      link_limit_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(drop_rate_ != NULL);
      drop_rate_->Clear();
    }
  }
  if (cached_has_bits & 96u) {
    ::memset(&mean_off_duration_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&mean_on_duration_) -
        reinterpret_cast<char*>(&mean_off_duration_)) + sizeof(mean_on_duration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemyBuffers.ConfigRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RemyBuffers.Range link_packets_per_ms = 71;
      case 71: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_link_packets_per_ms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemyBuffers.Range rtt = 72;
      case 72: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rtt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemyBuffers.Range num_senders = 73;
      case 73: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_num_senders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemyBuffers.Range link_limit = 74;
      case 74: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_link_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double mean_off_duration = 81;
      case 81: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 649 & 0xFF */)) {
          set_has_mean_off_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mean_off_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double mean_on_duration = 82;
      case 82: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 657 & 0xFF */)) {
          set_has_mean_on_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mean_on_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .RemyBuffers.Range drop_rate = 83;
      case 83: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drop_rate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemyBuffers.ConfigRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemyBuffers.ConfigRange)
  return false;
#undef DO_
}

void ConfigRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemyBuffers.ConfigRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .RemyBuffers.Range link_packets_per_ms = 71;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      71, this->_internal_link_packets_per_ms(), output);
  }

  // optional .RemyBuffers.Range rtt = 72;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      72, this->_internal_rtt(), output);
  }

  // optional .RemyBuffers.Range num_senders = 73;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      73, this->_internal_num_senders(), output);
  }

  // optional .RemyBuffers.Range link_limit = 74;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      74, this->_internal_link_limit(), output);
  }

  // optional double mean_off_duration = 81;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(81, this->mean_off_duration(), output);
  }

  // optional double mean_on_duration = 82;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(82, this->mean_on_duration(), output);
  }

  // optional .RemyBuffers.Range drop_rate = 83;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      83, this->_internal_drop_rate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemyBuffers.ConfigRange)
}

::google::protobuf::uint8* ConfigRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemyBuffers.ConfigRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .RemyBuffers.Range link_packets_per_ms = 71;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        71, this->_internal_link_packets_per_ms(), deterministic, target);
  }

  // optional .RemyBuffers.Range rtt = 72;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        72, this->_internal_rtt(), deterministic, target);
  }

  // optional .RemyBuffers.Range num_senders = 73;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        73, this->_internal_num_senders(), deterministic, target);
  }

  // optional .RemyBuffers.Range link_limit = 74;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        74, this->_internal_link_limit(), deterministic, target);
  }

  // optional double mean_off_duration = 81;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(81, this->mean_off_duration(), target);
  }

  // optional double mean_on_duration = 82;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(82, this->mean_on_duration(), target);
  }

  // optional .RemyBuffers.Range drop_rate = 83;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        83, this->_internal_drop_rate(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemyBuffers.ConfigRange)
  return target;
}

size_t ConfigRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemyBuffers.ConfigRange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .RemyBuffers.Range link_packets_per_ms = 71;
    if (has_link_packets_per_ms()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *link_packets_per_ms_);
    }

    // optional .RemyBuffers.Range rtt = 72;
    if (has_rtt()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rtt_);
    }

    // optional .RemyBuffers.Range num_senders = 73;
    if (has_num_senders()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *num_senders_);
    }

    // optional .RemyBuffers.Range link_limit = 74;
    if (has_link_limit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *link_limit_);
    }

    // optional .RemyBuffers.Range drop_rate = 83;
    if (has_drop_rate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *drop_rate_);
    }

    // optional double mean_off_duration = 81;
    if (has_mean_off_duration()) {
      total_size += 2 + 8;
    }

    // optional double mean_on_duration = 82;
    if (has_mean_on_duration()) {
      total_size += 2 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemyBuffers.ConfigRange)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemyBuffers.ConfigRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemyBuffers.ConfigRange)
    MergeFrom(*source);
  }
}

void ConfigRange::MergeFrom(const ConfigRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemyBuffers.ConfigRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_link_packets_per_ms()->::RemyBuffers::Range::MergeFrom(from.link_packets_per_ms());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_rtt()->::RemyBuffers::Range::MergeFrom(from.rtt());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_num_senders()->::RemyBuffers::Range::MergeFrom(from.num_senders());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_link_limit()->::RemyBuffers::Range::MergeFrom(from.link_limit());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_drop_rate()->::RemyBuffers::Range::MergeFrom(from.drop_rate());
    }
    if (cached_has_bits & 0x00000020u) {
      mean_off_duration_ = from.mean_off_duration_;
    }
    if (cached_has_bits & 0x00000040u) {
      mean_on_duration_ = from.mean_on_duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConfigRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemyBuffers.ConfigRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigRange::CopyFrom(const ConfigRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemyBuffers.ConfigRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigRange::IsInitialized() const {
  return true;
}

void ConfigRange::Swap(ConfigRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigRange::InternalSwap(ConfigRange* other) {
  using std::swap;
  swap(link_packets_per_ms_, other->link_packets_per_ms_);
  swap(rtt_, other->rtt_);
  swap(num_senders_, other->num_senders_);
  swap(link_limit_, other->link_limit_);
  swap(drop_rate_, other->drop_rate_);
  swap(mean_off_duration_, other->mean_off_duration_);
  swap(mean_on_duration_, other->mean_on_duration_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigRange::GetMetadata() const {
  protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NetConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetConfig::kMeanOnDurationFieldNumber;
const int NetConfig::kMeanOffDurationFieldNumber;
const int NetConfig::kNumSendersFieldNumber;
const int NetConfig::kLinkPptFieldNumber;
const int NetConfig::kDelayFieldNumber;
const int NetConfig::kLinkLimitFieldNumber;
const int NetConfig::kDropRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetConfig::NetConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_NetConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemyBuffers.NetConfig)
}
NetConfig::NetConfig(const NetConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mean_on_duration_, &from.mean_on_duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&drop_rate_) -
    reinterpret_cast<char*>(&mean_on_duration_)) + sizeof(drop_rate_));
  // @@protoc_insertion_point(copy_constructor:RemyBuffers.NetConfig)
}

void NetConfig::SharedCtor() {
  ::memset(&mean_on_duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drop_rate_) -
      reinterpret_cast<char*>(&mean_on_duration_)) + sizeof(drop_rate_));
}

NetConfig::~NetConfig() {
  // @@protoc_insertion_point(destructor:RemyBuffers.NetConfig)
  SharedDtor();
}

void NetConfig::SharedDtor() {
}

void NetConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NetConfig::descriptor() {
  ::protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetConfig& NetConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobufs_2ddefault_2fdna_2eproto::scc_info_NetConfig.base);
  return *internal_default_instance();
}


void NetConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:RemyBuffers.NetConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&mean_on_duration_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&drop_rate_) -
        reinterpret_cast<char*>(&mean_on_duration_)) + sizeof(drop_rate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NetConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemyBuffers.NetConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double mean_on_duration = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_mean_on_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mean_on_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double mean_off_duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_mean_off_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mean_off_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_senders = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_senders();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_senders_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double link_ppt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_link_ppt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &link_ppt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double delay = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_delay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &delay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 link_limit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_link_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &link_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double drop_rate = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_drop_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &drop_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemyBuffers.NetConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemyBuffers.NetConfig)
  return false;
#undef DO_
}

void NetConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemyBuffers.NetConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double mean_on_duration = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->mean_on_duration(), output);
  }

  // optional double mean_off_duration = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->mean_off_duration(), output);
  }

  // optional uint32 num_senders = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num_senders(), output);
  }

  // optional double link_ppt = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->link_ppt(), output);
  }

  // optional double delay = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->delay(), output);
  }

  // optional uint32 link_limit = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->link_limit(), output);
  }

  // optional double drop_rate = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->drop_rate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemyBuffers.NetConfig)
}

::google::protobuf::uint8* NetConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemyBuffers.NetConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double mean_on_duration = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->mean_on_duration(), target);
  }

  // optional double mean_off_duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->mean_off_duration(), target);
  }

  // optional uint32 num_senders = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num_senders(), target);
  }

  // optional double link_ppt = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->link_ppt(), target);
  }

  // optional double delay = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->delay(), target);
  }

  // optional uint32 link_limit = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->link_limit(), target);
  }

  // optional double drop_rate = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->drop_rate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemyBuffers.NetConfig)
  return target;
}

size_t NetConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemyBuffers.NetConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional double mean_on_duration = 1;
    if (has_mean_on_duration()) {
      total_size += 1 + 8;
    }

    // optional double mean_off_duration = 2;
    if (has_mean_off_duration()) {
      total_size += 1 + 8;
    }

    // optional double link_ppt = 4;
    if (has_link_ppt()) {
      total_size += 1 + 8;
    }

    // optional uint32 num_senders = 3;
    if (has_num_senders()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_senders());
    }

    // optional uint32 link_limit = 6;
    if (has_link_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->link_limit());
    }

    // optional double delay = 5;
    if (has_delay()) {
      total_size += 1 + 8;
    }

    // optional double drop_rate = 7;
    if (has_drop_rate()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemyBuffers.NetConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NetConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemyBuffers.NetConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemyBuffers.NetConfig)
    MergeFrom(*source);
  }
}

void NetConfig::MergeFrom(const NetConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemyBuffers.NetConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      mean_on_duration_ = from.mean_on_duration_;
    }
    if (cached_has_bits & 0x00000002u) {
      mean_off_duration_ = from.mean_off_duration_;
    }
    if (cached_has_bits & 0x00000004u) {
      link_ppt_ = from.link_ppt_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_senders_ = from.num_senders_;
    }
    if (cached_has_bits & 0x00000010u) {
      link_limit_ = from.link_limit_;
    }
    if (cached_has_bits & 0x00000020u) {
      delay_ = from.delay_;
    }
    if (cached_has_bits & 0x00000040u) {
      drop_rate_ = from.drop_rate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NetConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemyBuffers.NetConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetConfig::CopyFrom(const NetConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemyBuffers.NetConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetConfig::IsInitialized() const {
  return true;
}

void NetConfig::Swap(NetConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetConfig::InternalSwap(NetConfig* other) {
  using std::swap;
  swap(mean_on_duration_, other->mean_on_duration_);
  swap(mean_off_duration_, other->mean_off_duration_);
  swap(link_ppt_, other->link_ppt_);
  swap(num_senders_, other->num_senders_);
  swap(link_limit_, other->link_limit_);
  swap(delay_, other->delay_);
  swap(drop_rate_, other->drop_rate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NetConfig::GetMetadata() const {
  protobuf_protobufs_2ddefault_2fdna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobufs_2ddefault_2fdna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace RemyBuffers
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RemyBuffers::WhiskerTree* Arena::CreateMaybeMessage< ::RemyBuffers::WhiskerTree >(Arena* arena) {
  return Arena::CreateInternal< ::RemyBuffers::WhiskerTree >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RemyBuffers::MemoryRange* Arena::CreateMaybeMessage< ::RemyBuffers::MemoryRange >(Arena* arena) {
  return Arena::CreateInternal< ::RemyBuffers::MemoryRange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RemyBuffers::Memory* Arena::CreateMaybeMessage< ::RemyBuffers::Memory >(Arena* arena) {
  return Arena::CreateInternal< ::RemyBuffers::Memory >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RemyBuffers::Whisker* Arena::CreateMaybeMessage< ::RemyBuffers::Whisker >(Arena* arena) {
  return Arena::CreateInternal< ::RemyBuffers::Whisker >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RemyBuffers::OptimizationSetting* Arena::CreateMaybeMessage< ::RemyBuffers::OptimizationSetting >(Arena* arena) {
  return Arena::CreateInternal< ::RemyBuffers::OptimizationSetting >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RemyBuffers::OptimizationSettings* Arena::CreateMaybeMessage< ::RemyBuffers::OptimizationSettings >(Arena* arena) {
  return Arena::CreateInternal< ::RemyBuffers::OptimizationSettings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RemyBuffers::Range* Arena::CreateMaybeMessage< ::RemyBuffers::Range >(Arena* arena) {
  return Arena::CreateInternal< ::RemyBuffers::Range >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RemyBuffers::ConfigRange* Arena::CreateMaybeMessage< ::RemyBuffers::ConfigRange >(Arena* arena) {
  return Arena::CreateInternal< ::RemyBuffers::ConfigRange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RemyBuffers::NetConfig* Arena::CreateMaybeMessage< ::RemyBuffers::NetConfig >(Arena* arena) {
  return Arena::CreateInternal< ::RemyBuffers::NetConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
